<launch>
	
	<!-- <node pkg="auto_smart_factory" type="warehouse_management" name="warehouse_management" output="screen" /> -->

	<!-- <node pkg="auto_smart_factory" type="config_server" name="config_server">
        <param name="map_config_file" value="$(find auto_smart_factory)/../../configs/smart_factory_config.json" />
        <param name="robot_config_file" value="$(find auto_smart_factory)/../../configs/robot_config.json" />
        <param name="package_config_file" value="$(find auto_smart_factory)/../../configs/package_config.json" />
        <param name="occupancy_map_resolution" value="0.1" />
	</node> -->

  
  <node name="urg_node" pkg="urg_node" type="urg_node" output="screen">
    <param name="ip_address" value=""/>
    <param name="serial_port" value="/dev/ttyACM1"/>
    <param name="serial_baud" value="115200"/>
    <param name="frame_id" value="laser"/>
    <param name="calibrate_time" value="true"/>
    <param name="publish_intensity" value="false"/>
    <param name="publish_multiecho" value="false"/>
    <param name="angle_min" value="-1.5707963"/>
    <param name="angle_max" value="1.5707963"/>
  </node>
  


  <!-- <node name="cartographer_node" pkg="cartographer_ros"
    type="cartographer_node" 
    args="-configuration_directory $(find cartographer_ros)/configuration_files -configuration_basename pr2.lua"
    output="screen">
    <remap from="scan" to="/base_scan" />
  </node>

  <node name="cartographer_occupancy_grid_node" pkg="cartographer_ros"
    type="cartographer_occupancy_grid_node" args="-resolution 0.05" />

  <node name="tf_remove_frames" pkg="cartographer_ros"
    type="tf_remove_frames.py">
    <remap from="tf_out" to="/tf" />
    <rosparam param="remove_frames">
      - map
      - odom_combined
    </rosparam>
  </node> -->

</launch>